# by default some intel compilers put temporaries on the stack
# this might lead to segmentation faults if the stack limit is set to low
# stack limits can be increased by sysadmins or e.g with ulimit -s 256000
# Tested on Strasbourg University HPC Mesocenter - Intel Composer ver.12, 13, 14 
# Note: -O2 produces an executable which is slightly faster than -O3
# and the compilation time was also much shorter.
#### Version OpenMPI (without OMP !)
CC       = icc
CPP      = /lib/cpp
FC       = mpif90 -FR
FC_fixed = mpif90 -FI
LD       = mpif90
AR       = /usr/bin/ar -r
#Better with mkl (intel lapack/blas) only
#DFLAGS   = -D__INTEL -D__FFTSG -D__parallel
#If you want to use BLACS and SCALAPACK use the flags below
DFLAGS   = -D__INTEL -D__FFTSG -D__parallel -D__BLACS -D__SCALAPACK
CPPFLAGS = -C $(DFLAGS) -P -traditional
FCFLAGS  = -O2 -pc64 -unroll -heap-arrays 64
#verify if the path to the mkl libraries is already defined and/or differs from this
LDFLAGS  = $(FCFLAGS) -L$(HOME)/lib -L/opt/intel/composer_xe_2013.2.146/mkl/lib/intel64
LDFLAGS_C  = $(FCFLAGS) -L$(HOME)/lib -L/opt/intel/composer_xe_2013.2.146/mkl/lib/intel64 -nofor_main
#If you want to use BLACS and SCALAPACK use the libraries below
LIBS     = -mkl -lmkl_scalapack_lp64 -lmkl_blacs_openmpi_lp64 -lmkl_intel_lp64 \
           -lmkl_intel_thread -lmkl_core -lm -lpthread -liomp5

OBJECTS_ARCHITECTURE = machine_intel.o
