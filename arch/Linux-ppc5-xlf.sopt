CC       = gcc
CPP      = 
FC       = xlf95_r -qstacktemp=1 -qsuffix=f=F
LD       = xlf95_r -qstacktemp=1 
AR       = ar -r 
DFLAGS   =
CPPFLAGS = -C $(DFLAGS) -P -traditional
FCFLAGS  = -O2 -qstrict -q64  -qcache=auto -qmaxmem=-1  $(DFLAGS)
FCFLAGS2 = -O0 -qstrict -q64  -qcache=auto -qmaxmem=-1  $(DFLAGS)
LDFLAGS  = $(FCFLAGS) -L/sp/fd/teo/libs/BGP_FEN/lapack-3.2.1/

LIBS     = -llapack_BGP-FEN -lessl /opt/ibmcmp/xlmass/5.0/lib64/libmass_64.a
CPPSHELL = -WF,-D__COMPILE_ARCH="\"$(ARCH)\"",-D__COMPILE_DATE="\"$(shell date)\"",-D__COMPILE_HOST="\"$(shell hostname)\"",-D__COMPILE_LASTCVS="\"$(shell tail -n1 $(SRCDIR)/CVS/Entries)\""


### To speed up compilation time ###
cp2k_runs.o: cp2k_runs.F
	$(FC) -c $(FCFLAGS2) $<
f77_interface.o: f77_interface.F
	$(FC) -c $(FCFLAGS2) $<

md_run.o: md_run.F
	$(FC) -c $(FCFLAGS2) $<

geo_opt.o: geo_opt.F
	$(FC) -c $(FCFLAGS2) $<
cp_lbfgs_optimizer_gopt.o: cp_lbfgs_optimizer_gopt.F
	$(FC) -c $(FCFLAGS2) $<

force_env_methods.o: force_env_methods.F
	$(FC) -c $(FCFLAGS2) $<

qmmm_init.o: qmmm_init.F
	$(FC) -c $(FCFLAGS2) $<

mc_ensembles.o: mc_ensembles.F
	$(FC) -c $(FCFLAGS2) $<
mc_types.o: mc_types.F
	$(FC) -c $(FCFLAGS2) $<
mc_moves.o: mc_moves.F
	$(FC) -c $(FCFLAGS2) $<

pint_types.o: pint_types.F
	$(FC) -c $(FCFLAGS2) $<

nddo_methods.o: nddo_methods.F
	$(FC) -c $(FCFLAGS2) $<

